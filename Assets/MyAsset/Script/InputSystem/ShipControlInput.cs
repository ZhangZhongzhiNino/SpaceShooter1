//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/MyAsset/Script/InputSystem/ShipControlInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ShipControlInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ShipControlInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ShipControlInput"",
    ""maps"": [
        {
            ""name"": ""PlayerIn"",
            ""id"": ""9ffc204a-e3c6-4add-ad6f-536d6310161c"",
            ""actions"": [
                {
                    ""name"": ""Location"",
                    ""type"": ""Value"",
                    ""id"": ""987f42c3-94ae-40ff-bd64-7e86b30ff33a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""c2b03f94-022c-401a-9c35-02b910c4e671"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LunchMissile"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f6344c91-6677-41fe-9fd3-3c1e487011ef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleMouse"",
                    ""type"": ""Button"",
                    ""id"": ""3c9d4149-c048-4ea1-a0e7-f6d548c5c52d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Restart"",
                    ""type"": ""Button"",
                    ""id"": ""819ecfc6-4a89-4d43-ab47-4a7e3f8b6cc0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""e68ac9be-db51-4fc5-aedb-4819b9699387"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseR"",
                    ""type"": ""Button"",
                    ""id"": ""99222b1c-6819-43ae-8887-bd7dfb20ef62"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseL"",
                    ""type"": ""Button"",
                    ""id"": ""d80bd9e6-5b19-4ebd-ace0-40d302b204e6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quit"",
                    ""type"": ""Button"",
                    ""id"": ""5b777a60-4dfc-47df-9232-edfe85ab74dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""A1"",
                    ""type"": ""Button"",
                    ""id"": ""987fb7d9-88a5-4326-b4e7-592e40fbd591"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""A2"",
                    ""type"": ""Button"",
                    ""id"": ""3ba539d4-4d84-44f1-9824-d6caf072020e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""A3"",
                    ""type"": ""Button"",
                    ""id"": ""fd9dcadd-684c-4e77-b822-580393240672"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""scroll"",
                    ""type"": ""Value"",
                    ""id"": ""f310c361-2c95-4df3-9100-1fd64a734a14"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""842e5864-1957-4bbe-a9e1-43a712ea44b7"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Location"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""9fdd7e05-6eda-4d61-aef5-f64dc178f66c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Location"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""f68beee4-0530-497b-a802-9ef82833b2e7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Location"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""1b13aafa-f8d7-4f37-97f3-d7259350ccdc"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Location"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""a9c2396f-71a9-4ad5-bd3d-32823b00a1d3"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Location"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""eb42a89d-71e1-4376-98d9-c2af8d9f6a0b"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""LunchMissile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a6ac15a-c6d5-4d37-ba36-ea3251ad4a96"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""MiddleMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e696e325-0267-4dec-8679-f911360e5c2a"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Restart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""e22ad568-7110-43e9-8c19-e88a95a508d3"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""ebdfbeac-2fda-4d89-b118-db68b18b8af8"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""32e9a1ea-a5db-4e7a-bde9-fa74ccb6573a"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c49eec1a-2237-4c5b-87f4-fb6646816ea0"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b7cf350-4f3d-4f73-94b3-3d3af19fdc1c"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""MouseR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e13f71c7-a486-48a6-9c9b-49adc653b742"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""MouseL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bee8744a-454d-43bb-88c1-ff7efc8c0be5"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Quit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1201181f-3967-4254-a4f3-9a9a38ec3117"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""A1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0458b31-4ed4-4fa4-a4be-8d7e5b25fcd6"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""A2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32571214-f8ed-4252-b8dc-c22f87a28f6a"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""A3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8934401b-1bd0-45a3-a7a7-82e2b311516a"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KeyboardMouse"",
            ""bindingGroup"": ""KeyboardMouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // PlayerIn
        m_PlayerIn = asset.FindActionMap("PlayerIn", throwIfNotFound: true);
        m_PlayerIn_Location = m_PlayerIn.FindAction("Location", throwIfNotFound: true);
        m_PlayerIn_Rotation = m_PlayerIn.FindAction("Rotation", throwIfNotFound: true);
        m_PlayerIn_LunchMissile = m_PlayerIn.FindAction("LunchMissile", throwIfNotFound: true);
        m_PlayerIn_MiddleMouse = m_PlayerIn.FindAction("MiddleMouse", throwIfNotFound: true);
        m_PlayerIn_Restart = m_PlayerIn.FindAction("Restart", throwIfNotFound: true);
        m_PlayerIn_MousePosition = m_PlayerIn.FindAction("MousePosition", throwIfNotFound: true);
        m_PlayerIn_MouseR = m_PlayerIn.FindAction("MouseR", throwIfNotFound: true);
        m_PlayerIn_MouseL = m_PlayerIn.FindAction("MouseL", throwIfNotFound: true);
        m_PlayerIn_Quit = m_PlayerIn.FindAction("Quit", throwIfNotFound: true);
        m_PlayerIn_A1 = m_PlayerIn.FindAction("A1", throwIfNotFound: true);
        m_PlayerIn_A2 = m_PlayerIn.FindAction("A2", throwIfNotFound: true);
        m_PlayerIn_A3 = m_PlayerIn.FindAction("A3", throwIfNotFound: true);
        m_PlayerIn_scroll = m_PlayerIn.FindAction("scroll", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerIn
    private readonly InputActionMap m_PlayerIn;
    private IPlayerInActions m_PlayerInActionsCallbackInterface;
    private readonly InputAction m_PlayerIn_Location;
    private readonly InputAction m_PlayerIn_Rotation;
    private readonly InputAction m_PlayerIn_LunchMissile;
    private readonly InputAction m_PlayerIn_MiddleMouse;
    private readonly InputAction m_PlayerIn_Restart;
    private readonly InputAction m_PlayerIn_MousePosition;
    private readonly InputAction m_PlayerIn_MouseR;
    private readonly InputAction m_PlayerIn_MouseL;
    private readonly InputAction m_PlayerIn_Quit;
    private readonly InputAction m_PlayerIn_A1;
    private readonly InputAction m_PlayerIn_A2;
    private readonly InputAction m_PlayerIn_A3;
    private readonly InputAction m_PlayerIn_scroll;
    public struct PlayerInActions
    {
        private @ShipControlInput m_Wrapper;
        public PlayerInActions(@ShipControlInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Location => m_Wrapper.m_PlayerIn_Location;
        public InputAction @Rotation => m_Wrapper.m_PlayerIn_Rotation;
        public InputAction @LunchMissile => m_Wrapper.m_PlayerIn_LunchMissile;
        public InputAction @MiddleMouse => m_Wrapper.m_PlayerIn_MiddleMouse;
        public InputAction @Restart => m_Wrapper.m_PlayerIn_Restart;
        public InputAction @MousePosition => m_Wrapper.m_PlayerIn_MousePosition;
        public InputAction @MouseR => m_Wrapper.m_PlayerIn_MouseR;
        public InputAction @MouseL => m_Wrapper.m_PlayerIn_MouseL;
        public InputAction @Quit => m_Wrapper.m_PlayerIn_Quit;
        public InputAction @A1 => m_Wrapper.m_PlayerIn_A1;
        public InputAction @A2 => m_Wrapper.m_PlayerIn_A2;
        public InputAction @A3 => m_Wrapper.m_PlayerIn_A3;
        public InputAction @scroll => m_Wrapper.m_PlayerIn_scroll;
        public InputActionMap Get() { return m_Wrapper.m_PlayerIn; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerInActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerInActions instance)
        {
            if (m_Wrapper.m_PlayerInActionsCallbackInterface != null)
            {
                @Location.started -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnLocation;
                @Location.performed -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnLocation;
                @Location.canceled -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnLocation;
                @Rotation.started -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnRotation;
                @Rotation.performed -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnRotation;
                @Rotation.canceled -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnRotation;
                @LunchMissile.started -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnLunchMissile;
                @LunchMissile.performed -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnLunchMissile;
                @LunchMissile.canceled -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnLunchMissile;
                @MiddleMouse.started -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnMiddleMouse;
                @MiddleMouse.performed -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnMiddleMouse;
                @MiddleMouse.canceled -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnMiddleMouse;
                @Restart.started -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnRestart;
                @Restart.performed -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnRestart;
                @Restart.canceled -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnRestart;
                @MousePosition.started -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnMousePosition;
                @MousePosition.performed -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnMousePosition;
                @MousePosition.canceled -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnMousePosition;
                @MouseR.started -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnMouseR;
                @MouseR.performed -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnMouseR;
                @MouseR.canceled -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnMouseR;
                @MouseL.started -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnMouseL;
                @MouseL.performed -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnMouseL;
                @MouseL.canceled -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnMouseL;
                @Quit.started -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnQuit;
                @Quit.performed -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnQuit;
                @Quit.canceled -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnQuit;
                @A1.started -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnA1;
                @A1.performed -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnA1;
                @A1.canceled -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnA1;
                @A2.started -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnA2;
                @A2.performed -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnA2;
                @A2.canceled -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnA2;
                @A3.started -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnA3;
                @A3.performed -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnA3;
                @A3.canceled -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnA3;
                @scroll.started -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnScroll;
                @scroll.performed -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnScroll;
                @scroll.canceled -= m_Wrapper.m_PlayerInActionsCallbackInterface.OnScroll;
            }
            m_Wrapper.m_PlayerInActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Location.started += instance.OnLocation;
                @Location.performed += instance.OnLocation;
                @Location.canceled += instance.OnLocation;
                @Rotation.started += instance.OnRotation;
                @Rotation.performed += instance.OnRotation;
                @Rotation.canceled += instance.OnRotation;
                @LunchMissile.started += instance.OnLunchMissile;
                @LunchMissile.performed += instance.OnLunchMissile;
                @LunchMissile.canceled += instance.OnLunchMissile;
                @MiddleMouse.started += instance.OnMiddleMouse;
                @MiddleMouse.performed += instance.OnMiddleMouse;
                @MiddleMouse.canceled += instance.OnMiddleMouse;
                @Restart.started += instance.OnRestart;
                @Restart.performed += instance.OnRestart;
                @Restart.canceled += instance.OnRestart;
                @MousePosition.started += instance.OnMousePosition;
                @MousePosition.performed += instance.OnMousePosition;
                @MousePosition.canceled += instance.OnMousePosition;
                @MouseR.started += instance.OnMouseR;
                @MouseR.performed += instance.OnMouseR;
                @MouseR.canceled += instance.OnMouseR;
                @MouseL.started += instance.OnMouseL;
                @MouseL.performed += instance.OnMouseL;
                @MouseL.canceled += instance.OnMouseL;
                @Quit.started += instance.OnQuit;
                @Quit.performed += instance.OnQuit;
                @Quit.canceled += instance.OnQuit;
                @A1.started += instance.OnA1;
                @A1.performed += instance.OnA1;
                @A1.canceled += instance.OnA1;
                @A2.started += instance.OnA2;
                @A2.performed += instance.OnA2;
                @A2.canceled += instance.OnA2;
                @A3.started += instance.OnA3;
                @A3.performed += instance.OnA3;
                @A3.canceled += instance.OnA3;
                @scroll.started += instance.OnScroll;
                @scroll.performed += instance.OnScroll;
                @scroll.canceled += instance.OnScroll;
            }
        }
    }
    public PlayerInActions @PlayerIn => new PlayerInActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("KeyboardMouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    public interface IPlayerInActions
    {
        void OnLocation(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnLunchMissile(InputAction.CallbackContext context);
        void OnMiddleMouse(InputAction.CallbackContext context);
        void OnRestart(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnMouseR(InputAction.CallbackContext context);
        void OnMouseL(InputAction.CallbackContext context);
        void OnQuit(InputAction.CallbackContext context);
        void OnA1(InputAction.CallbackContext context);
        void OnA2(InputAction.CallbackContext context);
        void OnA3(InputAction.CallbackContext context);
        void OnScroll(InputAction.CallbackContext context);
    }
}
